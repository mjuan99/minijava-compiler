                   .code
                   PUSH heapInit
                   CALL                 ;llamada a heapInit
                   PUSH main
                   CALL                 ;llamada a main
                   HALT                 ;finalizacion del programa
heapInit:          RET 0
malloc:            LOADFP               ;Inicialización unidad
                   LOADSP
                   STOREFP              ;Finaliza inicialización del RA
                   LOADHL               ;hl
                   DUP                  ;hl
                   PUSH 1               ;1
                   ADD                  ;hl+1
                   STORE 4              ;Guarda el resultado (un puntero a la primer celda de la región de memoria)
                   LOAD 3               ;Carga la cantidad de celdas a alojar (parámetro que debe ser positivo)
                   ADD
                   STOREHL              ;Mueve el heap limit (hl). Expande el heap
                   STOREFP
                   RET 1                ;Retorna eliminando el parámetro
                   .DATA                ;VTable de A
VT_A:              DW debugPrint@Object,init@A,m1@A,main
                   .CODE                ;codigo de metodos definidos en A
init@A:            LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 4               ;carga valor del argumento en la pila
                   LOAD 3               ;carga this
                   SWAP
                   STOREREF 1           ;almacena el tope de la pila en el atributo
                   LOAD 3               ;this
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                 ;llamada a metodo m1
                   LOAD 3               ;this
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                 ;llamada a metodo m1
                   LOAD 3               ;this
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                 ;llamada a metodo m1
                   FMEM 0               ;liberar variables locales
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 2                ;retorno del metodo
m1@A:              LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3               ;carga this
                   LOADREF 1            ;carga valor del atributo en la pila ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                 ;llamada a metodo System.printIln
                   FMEM 0               ;liberar variables locales
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
main:              LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   RMEM 1               ;lugar de retorno
                   PUSH 2               ;celdas a reservar
                   PUSH malloc
                   CALL                 ;llamada a malloc
                   DUP
                   PUSH VT_A
                   STOREREF 0           ;set vtable ;declaracion de variable
                   PUSH 5               ;declaracion de variable
                   LOAD 0               ;carga valor de la variable en la pila
                   LOAD -1              ;carga valor de la variable en la pila ;argumento 0 del metodo init
                   SWAP
                   DUP
                   LOADREF 0
                   LOADREF 1
                   CALL                 ;llamada a metodo init
                   LOAD 0               ;carga valor de la variable en la pila
                   PUSH 6               ;argumento 0 del metodo init
                   SWAP
                   DUP
                   LOADREF 0
                   LOADREF 1
                   CALL                 ;llamada a metodo init
                   FMEM 2               ;liberar variables locales
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 0                ;retorno del metodo
                   .DATA                ;VTable de Object
VT_Object:         DW debugPrint@Object
                   .CODE                ;codigo de metodos definidos en Object
debugPrint@Object: LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   IPRINT
                   PRNLN
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
                   .DATA                ;VTable de String
VT_String:         DW debugPrint@Object
                   .CODE                ;codigo de metodos definidos en String
                   .DATA                ;VTable de System
VT_System:         DW debugPrint@Object,printC@System,printS@System,println@System,printCln@System,printSln@System,read@System,printB@System,printIln@System,printI@System,printBln@System
                   .CODE                ;codigo de metodos definidos en System
printC@System:     LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   CPRINT
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
printS@System:     LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
println@System:    LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   PRNLN
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 0                ;retorno del metodo
printCln@System:   LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   CPRINT
                   PRNLN
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
printSln@System:   LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
read@System:       LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   READ
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 0                ;retorno del metodo
printB@System:     LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   BPRINT
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
printIln@System:   LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   IPRINT
                   PRNLN
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
printI@System:     LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   IPRINT
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
printBln@System:   LOADFP               ;enlace dinamico
                   LOADSP
                   STOREFP              ;actualizar registro de activacion (apilar)
                   LOAD 3
                   BPRINT
                   PRNLN
                   STOREFP              ;actualizar registro de activación (desapilar)
                   RET 1                ;retorno del metodo
