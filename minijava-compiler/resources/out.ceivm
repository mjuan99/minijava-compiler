                   .code
                   PUSH heapInit
                   CALL                  ;llamada a heapInit
                   PUSH main
                   CALL                  ;llamada a main
                   HALT                  ;finalizacion del programa
heapInit:          RET 0
malloc:            LOADFP                ;Inicialización unidad
                   LOADSP
                   STOREFP               ;Finaliza inicialización del RA
                   LOADHL                ;hl
                   DUP                   ;hl
                   PUSH 1                ;1
                   ADD                   ;hl+1
                   STORE 4               ;Guarda el resultado (un puntero a la primer celda de la región de memoria)
                   LOAD 3                ;Carga la cantidad de celdas a alojar (parámetro que debe ser positivo)
                   ADD
                   STOREHL               ;Mueve el heap limit (hl). Expande el heap
                   STOREFP
                   RET 1                 ;Retorna eliminando el parámetro
                   .DATA                 ;VTable de A
VT_A:              DW debugPrint@Object,main,reverse@A
                   .CODE                 ;codigo de metodos definidos en A
main:              LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   PUSH 54321            ;declaracion de variable
                   PUSH 56789            ;declaracion de variable
                   RMEM 1                ;lugar de retorno
                   SWAP
                   LOAD 0                ;carga valor de la variable en la pila ;argumento 0 del metodo A.reverse
                   PUSH reverse@A
                   CALL                  ;llamada a metodo reverse ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                  ;llamada a metodo System.printIln
                   RMEM 1                ;lugar de retorno
                   SWAP
                   LOAD -1               ;carga valor de la variable en la pila ;argumento 0 del metodo A.reverse
                   PUSH reverse@A
                   CALL                  ;llamada a metodo reverse ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                  ;llamada a metodo System.printIln
                   FMEM 2                ;liberar variables locales
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 0                 ;retorno del metodo
reverse@A:         LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3                ;carga valor del argumento en la pila
                   PUSH 10
                   LT
                   BF else
then:              LOAD 3                ;carga valor del argumento en la pila
                   STORE 4
                   FMEM 0
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
                   FMEM 0                ;liberar variables locales
                   JUMP endIf
else:              RMEM 1                ;lugar de retorno
                   SWAP
                   LOAD 3                ;carga valor del argumento en la pila
                   PUSH 10
                   DIV                   ;argumento 0 del metodo A.reverse
                   PUSH reverse@A
                   CALL                  ;llamada a metodo reverse ;declaracion de variable
                   RMEM 1                ;lugar de retorno
                   PUSH 15
                   PUSH malloc
                   CALL                  ;llamada a malloc
                   DUP
                   PUSH VT_String
                   STOREREF 0            ;set vtable
                   DUP
                   PUSH 'i'
                   STOREREF 1
                   DUP
                   PUSH '2'
                   STOREREF 2
                   DUP
                   PUSH 'r'
                   STOREREF 3
                   DUP
                   PUSH 'e'
                   STOREREF 4
                   DUP
                   PUSH 'v'
                   STOREREF 5
                   DUP
                   PUSH 'e'
                   STOREREF 6
                   DUP
                   PUSH 'r'
                   STOREREF 7
                   DUP
                   PUSH 's'
                   STOREREF 8
                   DUP
                   PUSH 'e'
                   STOREREF 9
                   DUP
                   PUSH 'd'
                   STOREREF 10
                   DUP
                   PUSH ' '
                   STOREREF 11
                   DUP
                   PUSH '='
                   STOREREF 12
                   DUP
                   PUSH ' '
                   STOREREF 13
                   DUP
                   PUSH 0
                   STOREREF 14           ;argumento 0 del metodo System.printS
                   PUSH printS@System
                   CALL                  ;llamada a metodo System.printS
                   LOAD 0                ;carga valor de la variable en la pila ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                  ;llamada a metodo System.printIln
                   LOAD 0                ;carga valor de la variable en la pila
                   PUSH 10
                   MUL                   ;declaracion de variable
                   RMEM 1                ;lugar de retorno
                   PUSH 22
                   PUSH malloc
                   CALL                  ;llamada a malloc
                   DUP
                   PUSH VT_String
                   STOREREF 0            ;set vtable
                   DUP
                   PUSH 'i'
                   STOREREF 1
                   DUP
                   PUSH '2'
                   STOREREF 2
                   DUP
                   PUSH 'r'
                   STOREREF 3
                   DUP
                   PUSH 'e'
                   STOREREF 4
                   DUP
                   PUSH 'v'
                   STOREREF 5
                   DUP
                   PUSH 'e'
                   STOREREF 6
                   DUP
                   PUSH 'r'
                   STOREREF 7
                   DUP
                   PUSH 's'
                   STOREREF 8
                   DUP
                   PUSH 'e'
                   STOREREF 9
                   DUP
                   PUSH 'd'
                   STOREREF 10
                   DUP
                   PUSH 'T'
                   STOREREF 11
                   DUP
                   PUSH 'i'
                   STOREREF 12
                   DUP
                   PUSH 'm'
                   STOREREF 13
                   DUP
                   PUSH 'e'
                   STOREREF 14
                   DUP
                   PUSH 's'
                   STOREREF 15
                   DUP
                   PUSH '1'
                   STOREREF 16
                   DUP
                   PUSH '0'
                   STOREREF 17
                   DUP
                   PUSH ' '
                   STOREREF 18
                   DUP
                   PUSH '='
                   STOREREF 19
                   DUP
                   PUSH ' '
                   STOREREF 20
                   DUP
                   PUSH 0
                   STOREREF 21           ;argumento 0 del metodo System.printS
                   PUSH printS@System
                   CALL                  ;llamada a metodo System.printS
                   LOAD -1               ;carga valor de la variable en la pila ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                  ;llamada a metodo System.printIln
                   LOAD 3                ;carga valor del argumento en la pila
                   PUSH 10
                   MOD                   ;declaracion de variable
                   RMEM 1                ;lugar de retorno
                   PUSH 14
                   PUSH malloc
                   CALL                  ;llamada a malloc
                   DUP
                   PUSH VT_String
                   STOREREF 0            ;set vtable
                   DUP
                   PUSH 'l'
                   STOREREF 1
                   DUP
                   PUSH 'a'
                   STOREREF 2
                   DUP
                   PUSH 's'
                   STOREREF 3
                   DUP
                   PUSH 't'
                   STOREREF 4
                   DUP
                   PUSH 'D'
                   STOREREF 5
                   DUP
                   PUSH 'i'
                   STOREREF 6
                   DUP
                   PUSH 'g'
                   STOREREF 7
                   DUP
                   PUSH 'i'
                   STOREREF 8
                   DUP
                   PUSH 't'
                   STOREREF 9
                   DUP
                   PUSH ' '
                   STOREREF 10
                   DUP
                   PUSH '='
                   STOREREF 11
                   DUP
                   PUSH ' '
                   STOREREF 12
                   DUP
                   PUSH 0
                   STOREREF 13           ;argumento 0 del metodo System.printS
                   PUSH printS@System
                   CALL                  ;llamada a metodo System.printS
                   LOAD -2               ;carga valor de la variable en la pila ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                  ;llamada a metodo System.printIln
                   LOAD -1               ;carga valor de la variable en la pila
                   LOAD -2               ;carga valor de la variable en la pila
                   ADD                   ;declaracion de variable
                   RMEM 1                ;lugar de retorno
                   PUSH 14
                   PUSH malloc
                   CALL                  ;llamada a malloc
                   DUP
                   PUSH VT_String
                   STOREREF 0            ;set vtable
                   DUP
                   PUSH 'i'
                   STOREREF 1
                   DUP
                   PUSH 'r'
                   STOREREF 2
                   DUP
                   PUSH 'e'
                   STOREREF 3
                   DUP
                   PUSH 'v'
                   STOREREF 4
                   DUP
                   PUSH 'e'
                   STOREREF 5
                   DUP
                   PUSH 'r'
                   STOREREF 6
                   DUP
                   PUSH 's'
                   STOREREF 7
                   DUP
                   PUSH 'e'
                   STOREREF 8
                   DUP
                   PUSH 'd'
                   STOREREF 9
                   DUP
                   PUSH ' '
                   STOREREF 10
                   DUP
                   PUSH '='
                   STOREREF 11
                   DUP
                   PUSH ' '
                   STOREREF 12
                   DUP
                   PUSH 0
                   STOREREF 13           ;argumento 0 del metodo System.printS
                   PUSH printS@System
                   CALL                  ;llamada a metodo System.printS
                   LOAD -3               ;carga valor de la variable en la pila ;argumento 0 del metodo System.printIln
                   PUSH printIln@System
                   CALL                  ;llamada a metodo System.printIln
                   LOAD -3               ;carga valor de la variable en la pila
                   STORE 4
                   FMEM 4
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
                   FMEM 4                ;liberar variables locales
endIf:             NOP                   ;fin del if
                   FMEM 0                ;liberar variables locales
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
                   .DATA                 ;VTable de Object
VT_Object:         DW debugPrint@Object
                   .CODE                 ;codigo de metodos definidos en Object
debugPrint@Object: LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   IPRINT
                   PRNLN
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
                   .DATA                 ;VTable de String
VT_String:         DW debugPrint@Object
                   .CODE                 ;codigo de metodos definidos en String
                   .DATA                 ;VTable de System
VT_System:         DW debugPrint@Object,printC@System,printS@System,println@System,printCln@System,printSln@System,read@System,printB@System,printIln@System,printI@System,printBln@System
                   .CODE                 ;codigo de metodos definidos en System
printC@System:     LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   CPRINT
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
printS@System:     LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   PUSH 1
                   ADD
                   SPRINT
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
println@System:    LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   PRNLN
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 0                 ;retorno del metodo
printCln@System:   LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   CPRINT
                   PRNLN
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
printSln@System:   LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   PUSH 1
                   ADD
                   SPRINT
                   PRNLN
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
read@System:       LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   READ
                   STORE 3
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 0                 ;retorno del metodo
printB@System:     LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   BPRINT
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
printIln@System:   LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   IPRINT
                   PRNLN
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
printI@System:     LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   IPRINT
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
printBln@System:   LOADFP                ;enlace dinamico
                   LOADSP
                   STOREFP               ;actualizar registro de activacion (apilar)
                   LOAD 3
                   BPRINT
                   PRNLN
                   STOREFP               ;actualizar registro de activación (desapilar)
                   RET 1                 ;retorno del metodo
