                   .CODE                          ;inicio del programa
                   PUSH heapInit                  ;cargar la etiqueta de la rutina heapInit
                   CALL                           ;llamada a heapInit
                   PUSH main                      ;cargar la etiqueta del metodo main
                   CALL                           ;llamada a main
                   HALT                           ;finalizacion del programa
heapInit:          RET 0                          ;rutina heapInit vacia
malloc:            LOADFP                         ;Inicialización unidad
                   LOADSP
                   STOREFP                        ;Finaliza inicialización del RA
                   LOADHL                         ;hl
                   DUP                            ;hl
                   PUSH 1                         ;1
                   ADD                            ;hl+1
                   STORE 4                        ;Guarda el resultado (un puntero a la primer celda de la región de memoria)
                   LOAD 3                         ;Carga la cantidad de celdas a alojar (parámetro que debe ser positivo)
                   ADD
                   STOREHL                        ;Mueve el heap limit (hl). Expande el heap
                   STOREFP
                   RET 1                          ;Retorna eliminando el parámetro
                   .DATA                          ;VTable de A
VT_A:              DW m1@A
                   .CODE                          ;codigo de metodos definidos en A
m1@A:              LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 9                         ;celdas a reservar
                   PUSH malloc                    ;cargar la etiqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP
                   PUSH 'm'
                   STOREREF 1
                   DUP
                   PUSH '1'
                   STOREREF 2
                   DUP
                   PUSH ' '
                   STOREREF 3
                   DUP
                   PUSH 'e'
                   STOREREF 4
                   DUP
                   PUSH 'n'
                   STOREREF 5
                   DUP
                   PUSH ' '
                   STOREREF 6
                   DUP
                   PUSH 'A'
                   STOREREF 7
                   DUP
                   PUSH 0                         ;terminador de string
                   STOREREF 8                     ;argumento 0 del metodo System.printSln
                   PUSH printSln@System           ;cargar la etiqueta del metodo System.printSln
                   CALL                           ;llamada a metodo System.printSln
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
                   .DATA                          ;VTable de B
VT_B:              DW m1@A,m2@B,m2@B
                   .CODE                          ;codigo de metodos definidos en B
m2@B:              LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 9                         ;celdas a reservar
                   PUSH malloc                    ;cargar la etiqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP
                   PUSH 'm'
                   STOREREF 1
                   DUP
                   PUSH '2'
                   STOREREF 2
                   DUP
                   PUSH ' '
                   STOREREF 3
                   DUP
                   PUSH 'e'
                   STOREREF 4
                   DUP
                   PUSH 'n'
                   STOREREF 5
                   DUP
                   PUSH ' '
                   STOREREF 6
                   DUP
                   PUSH 'B'
                   STOREREF 7
                   DUP
                   PUSH 0                         ;terminador de string
                   STOREREF 8                     ;argumento 0 del metodo System.printSln
                   PUSH printSln@System           ;cargar la etiqueta del metodo System.printSln
                   CALL                           ;llamada a metodo System.printSln
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
                   .DATA                          ;VTable de C
VT_C:              DW m2@C
                   .CODE                          ;codigo de metodos definidos en C
m2@C:              LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 9                         ;celdas a reservar
                   PUSH malloc                    ;cargar la etiqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP
                   PUSH 'm'
                   STOREREF 1
                   DUP
                   PUSH '2'
                   STOREREF 2
                   DUP
                   PUSH ' '
                   STOREREF 3
                   DUP
                   PUSH 'e'
                   STOREREF 4
                   DUP
                   PUSH 'n'
                   STOREREF 5
                   DUP
                   PUSH ' '
                   STOREREF 6
                   DUP
                   PUSH 'C'
                   STOREREF 7
                   DUP
                   PUSH 0                         ;terminador de string
                   STOREREF 8                     ;argumento 0 del metodo System.printSln
                   PUSH printSln@System           ;cargar la etiqueta del metodo System.printSln
                   CALL                           ;llamada a metodo System.printSln
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
                   .DATA                          ;VTable de D
VT_D:              DW m2@C,m1@D,m2@C
                   .CODE                          ;codigo de metodos definidos en D
m1@D:              LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 9                         ;celdas a reservar
                   PUSH malloc                    ;cargar la etiqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP
                   PUSH 'm'
                   STOREREF 1
                   DUP
                   PUSH '1'
                   STOREREF 2
                   DUP
                   PUSH ' '
                   STOREREF 3
                   DUP
                   PUSH 'e'
                   STOREREF 4
                   DUP
                   PUSH 'n'
                   STOREREF 5
                   DUP
                   PUSH ' '
                   STOREREF 6
                   DUP
                   PUSH 'D'
                   STOREREF 7
                   DUP
                   PUSH 0                         ;terminador de string
                   STOREREF 8                     ;argumento 0 del metodo System.printSln
                   PUSH printSln@System           ;cargar la etiqueta del metodo System.printSln
                   CALL                           ;llamada a metodo System.printSln
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
debugPrint@Object: LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   IPRINT                         ;imprimir por pantalla
                   PRNLN                          ;imprimir salto de linea
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
main:              LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH getBI1@Main               ;cargar la etiqueta del metodo getBI1
                   CALL                           ;llamada al metodo getBI1
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                           ;llamada a metodo m1
                   RMEM 1                         ;lugar de retorno
                   PUSH getBI2@Main               ;cargar la etiqueta del metodo getBI2
                   CALL                           ;llamada al metodo getBI2
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                           ;llamada a metodo m2
                   RMEM 1                         ;lugar de retorno
                   PUSH getDI1@Main               ;cargar la etiqueta del metodo getDI1
                   CALL                           ;llamada al metodo getDI1
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                           ;llamada a metodo m1
                   RMEM 1                         ;lugar de retorno
                   PUSH getDI2@Main               ;cargar la etiqueta del metodo getDI2
                   CALL                           ;llamada al metodo getDI2
                   DUP
                   LOADREF 0
                   LOADREF 2
                   CALL                           ;llamada a metodo m2
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
getBI1@Main:       LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 1                         ;celdas a reservar
                   PUSH malloc                    ;cargar la eitqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP                            ;setear vtable (1)
                   PUSH VT_B                      ;setear vtable (2)
                   STOREREF 0                     ;setear vtable (3)
                   STORE 3                        ;guarda el valor de retorno
                   FMEM 0                         ;liberar variables del metodo
                   STOREFP                        ;actualizar registro de activación (desapilar)
                   RET 0                          ;retorno del metodo
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
getBI2@Main:       LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 1                         ;celdas a reservar
                   PUSH malloc                    ;cargar la eitqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP                            ;setear vtable (1)
                   PUSH VT_B                      ;setear vtable (2)
                   STOREREF 0                     ;setear vtable (3)
                   STORE 3                        ;guarda el valor de retorno
                   FMEM 0                         ;liberar variables del metodo
                   STOREFP                        ;actualizar registro de activación (desapilar)
                   RET 0                          ;retorno del metodo
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
getDI1@Main:       LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 1                         ;celdas a reservar
                   PUSH malloc                    ;cargar la eitqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP                            ;setear vtable (1)
                   PUSH VT_D                      ;setear vtable (2)
                   STOREREF 0                     ;setear vtable (3)
                   STORE 3                        ;guarda el valor de retorno
                   FMEM 0                         ;liberar variables del metodo
                   STOREFP                        ;actualizar registro de activación (desapilar)
                   RET 0                          ;retorno del metodo
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
getDI2@Main:       LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   RMEM 1                         ;lugar de retorno
                   PUSH 1                         ;celdas a reservar
                   PUSH malloc                    ;cargar la eitqueta de la rutina malloc
                   CALL                           ;llamada a malloc
                   DUP                            ;setear vtable (1)
                   PUSH VT_D                      ;setear vtable (2)
                   STOREREF 0                     ;setear vtable (3)
                   STORE 3                        ;guarda el valor de retorno
                   FMEM 0                         ;liberar variables del metodo
                   STOREFP                        ;actualizar registro de activación (desapilar)
                   RET 0                          ;retorno del metodo
                   FMEM 0                         ;liberar variables locales
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
printC@System:     LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   CPRINT                         ;imprimir por pantalla
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
printS@System:     LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar string a imprimir (1)
                   PUSH 1                         ;cargar string a imprimir (2)
                   ADD                            ;cargar string a imprimir (3)
                   SPRINT                         ;imprimir string
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
println@System:    LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   PRNLN                          ;imprimir salto de linea
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
printCln@System:   LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   CPRINT                         ;imprimir por pantalla
                   PRNLN                          ;imprimir salto de linea
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
printSln@System:   LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar string a imprimir (1)
                   PUSH 1                         ;cargar string a imprimir (2)
                   ADD                            ;cargar string a imprimir (3)
                   SPRINT                         ;imprimir string
                   PRNLN                          ;salto de linea
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
read@System:       LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   READ                           ;leer entrada
                   STORE 3                        ;almacenar valor leido en el lugar de retorno
                   STOREFP                        ;desapilar registro de activación
                   RET 0                          ;retorno del metodo
printB@System:     LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   BPRINT                         ;imprimir por pantalla
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
printIln@System:   LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   IPRINT                         ;imprimir por pantalla
                   PRNLN                          ;imprimir salto de linea
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
printI@System:     LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   IPRINT                         ;imprimir por pantalla
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
printBln@System:   LOADFP                         ;enlace dinamico
                   LOADSP                         ;apilar registro de activacion (1)
                   STOREFP                        ;apilar registro de activacion (2)
                   LOAD 3                         ;cargar parametro a imprimir
                   BPRINT                         ;imprimir por pantalla
                   PRNLN                          ;imprimir salto de linea
                   STOREFP                        ;desapilar registro de activación
                   RET 1                          ;retorno del metodo
